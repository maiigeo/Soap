
package sw;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConversionSW", targetNamespace = "http://sw/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConversionSW {


    /**
     * 
     * @param dato2
     * @param dato1
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Multiplicar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Multiplicar", targetNamespace = "http://sw/", className = "sw.Multiplicar")
    @ResponseWrapper(localName = "MultiplicarResponse", targetNamespace = "http://sw/", className = "sw.MultiplicarResponse")
    @Action(input = "http://sw/ConversionSW/MultiplicarRequest", output = "http://sw/ConversionSW/MultiplicarResponse")
    public int multiplicar(
        @WebParam(name = "Dato1", targetNamespace = "")
        int dato1,
        @WebParam(name = "Dato2", targetNamespace = "")
        int dato2);

    /**
     * 
     * @param altura
     * @param base
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AreaC")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AreaC", targetNamespace = "http://sw/", className = "sw.AreaC")
    @ResponseWrapper(localName = "AreaCResponse", targetNamespace = "http://sw/", className = "sw.AreaCResponse")
    @Action(input = "http://sw/ConversionSW/AreaCRequest", output = "http://sw/ConversionSW/AreaCResponse")
    public int areaC(
        @WebParam(name = "Base", targetNamespace = "")
        int base,
        @WebParam(name = "Altura", targetNamespace = "")
        int altura);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sw/", className = "sw.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sw/", className = "sw.HelloResponse")
    @Action(input = "http://sw/ConversionSW/helloRequest", output = "http://sw/ConversionSW/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param euros
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "euroADolar", targetNamespace = "http://sw/", className = "sw.EuroADolar")
    @ResponseWrapper(localName = "euroADolarResponse", targetNamespace = "http://sw/", className = "sw.EuroADolarResponse")
    @Action(input = "http://sw/ConversionSW/euroADolarRequest", output = "http://sw/ConversionSW/euroADolarResponse")
    public Double euroADolar(
        @WebParam(name = "euros", targetNamespace = "")
        double euros);

    /**
     * 
     * @param contrase
     * @param usuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Ingresar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Ingresar", targetNamespace = "http://sw/", className = "sw.Ingresar")
    @ResponseWrapper(localName = "IngresarResponse", targetNamespace = "http://sw/", className = "sw.IngresarResponse")
    @Action(input = "http://sw/ConversionSW/IngresarRequest", output = "http://sw/ConversionSW/IngresarResponse")
    public String ingresar(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "contrase", targetNamespace = "")
        String contrase);

    /**
     * 
     * @param dato2
     * @param dato1
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Sumar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Sumar", targetNamespace = "http://sw/", className = "sw.Sumar")
    @ResponseWrapper(localName = "SumarResponse", targetNamespace = "http://sw/", className = "sw.SumarResponse")
    @Action(input = "http://sw/ConversionSW/SumarRequest", output = "http://sw/ConversionSW/SumarResponse")
    public int sumar(
        @WebParam(name = "Dato1", targetNamespace = "")
        int dato1,
        @WebParam(name = "Dato2", targetNamespace = "")
        int dato2);

    /**
     * 
     * @param dato2
     * @param dato1
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Restar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Restar", targetNamespace = "http://sw/", className = "sw.Restar")
    @ResponseWrapper(localName = "RestarResponse", targetNamespace = "http://sw/", className = "sw.RestarResponse")
    @Action(input = "http://sw/ConversionSW/RestarRequest", output = "http://sw/ConversionSW/RestarResponse")
    public int restar(
        @WebParam(name = "Dato1", targetNamespace = "")
        int dato1,
        @WebParam(name = "Dato2", targetNamespace = "")
        int dato2);

    /**
     * 
     * @param dato2
     * @param dato1
     * @return
     *     returns int
     */
    @WebMethod(operationName = "Dividir")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Dividir", targetNamespace = "http://sw/", className = "sw.Dividir")
    @ResponseWrapper(localName = "DividirResponse", targetNamespace = "http://sw/", className = "sw.DividirResponse")
    @Action(input = "http://sw/ConversionSW/DividirRequest", output = "http://sw/ConversionSW/DividirResponse")
    public int dividir(
        @WebParam(name = "Dato1", targetNamespace = "")
        int dato1,
        @WebParam(name = "Dato2", targetNamespace = "")
        int dato2);

    /**
     * 
     * @param catetoa
     * @param catetob
     * @return
     *     returns double
     */
    @WebMethod(operationName = "TeoremaPitagoras")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "TeoremaPitagoras", targetNamespace = "http://sw/", className = "sw.TeoremaPitagoras")
    @ResponseWrapper(localName = "TeoremaPitagorasResponse", targetNamespace = "http://sw/", className = "sw.TeoremaPitagorasResponse")
    @Action(input = "http://sw/ConversionSW/TeoremaPitagorasRequest", output = "http://sw/ConversionSW/TeoremaPitagorasResponse")
    public double teoremaPitagoras(
        @WebParam(name = "Catetoa", targetNamespace = "")
        int catetoa,
        @WebParam(name = "Catetob", targetNamespace = "")
        int catetob);

    /**
     * 
     * @param grados
     * @return
     *     returns int
     */
    @WebMethod(operationName = "GradosCaF")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GradosCaF", targetNamespace = "http://sw/", className = "sw.GradosCaF")
    @ResponseWrapper(localName = "GradosCaFResponse", targetNamespace = "http://sw/", className = "sw.GradosCaFResponse")
    @Action(input = "http://sw/ConversionSW/GradosCaFRequest", output = "http://sw/ConversionSW/GradosCaFResponse")
    public int gradosCaF(
        @WebParam(name = "Grados", targetNamespace = "")
        int grados);

}
